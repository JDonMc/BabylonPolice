# Generated by Django 3.2.20 on 2023-08-21 18:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('vote_count', models.IntegerField(default=0)),
                ('the_owner', models.CharField(default='', max_length=200)),
                ('viewcount', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Antonym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_antonym_itself', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_attribute_itself', models.CharField(default='', max_length=200)),
                ('views', models.IntegerField(default=0)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('definition_count', models.IntegerField(default=0)),
                ('synonym_count', models.IntegerField(default=0)),
                ('antonym_count', models.IntegerField(default=0)),
                ('homonym_count', models.IntegerField(default=0)),
                ('antonyms', models.ManyToManyField(default=None, to='Bable.Antonym')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='', max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChangeDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('each', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum_dictionaries', models.IntegerField(default=0)),
                ('body', models.TextField(default='', max_length=144000)),
                ('top_price', models.IntegerField(default=0)),
                ('votes_count', models.IntegerField(default=0)),
                ('viewcount', models.IntegerField(default=0)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('sum_has_commented', models.IntegerField(default=0)),
                ('sum_has_viewed', models.IntegerField(default=0)),
                ('sum_has_voted', models.IntegerField(default=0)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('allowed_to_view_authors', models.ManyToManyField(default=None, related_name='comment_allowed', to='Bable.Author')),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment_Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum_dictionaries', models.IntegerField(default=0)),
                ('sum_words', models.IntegerField(default=0)),
                ('body', models.TextField(default='', max_length=144000)),
                ('votes_count', models.IntegerField(default=0)),
                ('original', models.CharField(default='', max_length=200)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Connexion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_connexion_itself', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='con_com', to='Bable.Comment_Source')),
                ('has_voted', models.ManyToManyField(default=None, related_name='con_has_voted', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Densitivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dense', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=False)),
                ('for_sale', models.BooleanField(default=False)),
                ('invite_only', models.BooleanField(default=False)),
                ('invite_active', models.BooleanField(default=False)),
                ('invite_code', models.CharField(default='', max_length=200)),
                ('views', models.IntegerField(default=0)),
                ('the_dictionary_itself', models.CharField(default='dictionary_name', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('traded_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('allowed_count', models.IntegerField(default=0)),
                ('word_count', models.IntegerField(default=0)),
                ('votes_count', models.IntegerField(default=0)),
                ('viewcount', models.IntegerField(default=0)),
                ('sentence_count', models.IntegerField(default=0)),
                ('analysis_count', models.IntegerField(default=0)),
                ('rendition_count', models.IntegerField(default=0)),
                ('prerequisite_dics_count', models.IntegerField(default=0)),
                ('entry_fee', models.IntegerField(default=0)),
                ('continuation_fee', models.IntegerField(default=0)),
                ('dictionary_source', models.CharField(default='', max_length=400)),
                ('allowed_to_view_authors', models.ManyToManyField(default=None, related_name='dic_allowed', to='Bable.Author')),
                ('analyses', models.ManyToManyField(default=None, to='Bable.Analysis')),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='dicauthor', to='Bable.author')),
            ],
        ),
        migrations.CreateModel(
            name='Dictionary_Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_dictionary_itself', models.CharField(default='', max_length=200)),
                ('public', models.BooleanField(default=False)),
                ('dictionary_id', models.CharField(default='', max_length=256)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('purchasers', models.ManyToManyField(default=None, related_name='dspurchasers', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Edit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(default='', max_length=144000)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='Bable.author')),
            ],
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_example_itself', models.TextField(default='', max_length=1000)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='exa_com', to='Bable.Comment_Source')),
                ('dictionaries', models.ManyToManyField(default=None, to='Bable.Dictionary_Source')),
                ('has_voted', models.ManyToManyField(default=None, related_name='exa_has_voted', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='files')),
                ('url2', models.URLField(max_length=2000)),
                ('filename', models.CharField(default='', max_length=200)),
                ('public', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('price_id', models.CharField(default='', max_length=200)),
                ('item_name', models.CharField(default='', max_length=200)),
                ('author', models.CharField(default='', max_length=200)),
                ('success', models.BooleanField(default=False)),
                ('submit_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='IPA_pronunciation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_IPA_itself', models.CharField(default='', max_length=200)),
                ('homophones', models.TextField(default='', max_length=1000)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('has_voted', models.ManyToManyField(default=None, related_name='pro_has_voted', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('username', models.CharField(default='', max_length=150, unique=True)),
                ('sent', models.BooleanField(default=False)),
                ('new', models.BooleanField(default=True)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Pageviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(default='', max_length=200)),
                ('views', models.IntegerField(default=0)),
                ('translation', models.CharField(default='en', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200)),
                ('url2', models.URLField(blank=True, default='', max_length=2000)),
                ('img', models.URLField(blank=True, default='', max_length=2000)),
                ('sum_has_commented', models.IntegerField(default=0)),
                ('sum_has_viewed', models.IntegerField(default=0)),
                ('sum_has_voted', models.IntegerField(default=0)),
                ('votes_uniques', models.IntegerField(default=0)),
                ('under_talked', models.FloatField(default=0)),
                ('sum_dictionaries', models.IntegerField(default=0)),
                ('sum_words', models.IntegerField(default=0)),
                ('body', models.TextField(default='', max_length=144000)),
                ('sum_comments', models.IntegerField(default=0)),
                ('sum_sponsors', models.IntegerField(default=0)),
                ('viewcount', models.IntegerField(default=0)),
                ('change_count', models.IntegerField(default=0)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('public', models.BooleanField(default=1)),
                ('sum_spaces', models.IntegerField(default=0)),
                ('votes_count', models.IntegerField(default=0)),
                ('post_source', models.CharField(default='', max_length=400)),
                ('cc', models.CharField(default='', max_length=400)),
                ('shuffle', models.IntegerField(default=0)),
                ('attention', models.IntegerField(default=99999999)),
                ('allowed_to_view_authors', models.ManyToManyField(default=None, related_name='post_allowed', to='Bable.Author')),
                ('author', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comments', models.ManyToManyField(default=None, to='Bable.Comment')),
                ('dictionaries', models.ManyToManyField(default=None, to='Bable.Dictionary')),
                ('edits', models.ManyToManyField(default=None, to='Bable.Edit')),
                ('has_commented', models.ManyToManyField(default=None, related_name='post_has_commented', to='Bable.Author')),
                ('has_viewed', models.ManyToManyField(default=None, related_name='post_has_viewed', to='Bable.Author')),
                ('has_voted', models.ManyToManyField(default=None, related_name='post_has_voted', to='Bable.Author')),
                ('post_allowed', models.ManyToManyField(default=None, related_name='post_allowed_authors', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Post_id',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_posts_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PostSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.CharField(default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_relation_itself', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='rel_com', to='Bable.Comment_Source')),
                ('has_voted', models.ManyToManyField(default=None, related_name='rel_has_voted', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Rendition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('vote_count', models.IntegerField(default=0)),
                ('the_owner', models.CharField(default='', max_length=200)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
            ],
        ),
        migrations.CreateModel(
            name='Requested_Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Searches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_search_itself', models.CharField(default='', max_length=200)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Simulacrum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_simulacrum_itself', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='sim_com', to='Bable.Comment_Source')),
                ('connexia', models.ManyToManyField(default=None, to='Bable.Connexion')),
                ('has_voted', models.ManyToManyField(default=None, related_name='sim_has_voted', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='SpaceSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowed_to_view_authors', models.ManyToManyField(default=None, related_name='space_source_allowed', to='Bable.Author')),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='space_source_author', to='Bable.author')),
                ('dictionary', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.dictionary_source')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_sponsorship_phrase', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('img', models.URLField(max_length=2000)),
                ('url2', models.URLField(max_length=2000)),
                ('clicks', models.IntegerField(default=0)),
                ('payperview', models.BooleanField(default=False)),
                ('price_limit', models.IntegerField(default=0)),
                ('allowable_expenditure', models.IntegerField(default=0)),
                ('trickles', models.IntegerField(default=0)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('has_voted', models.ManyToManyField(default=None, related_name='spo_has_voted', to='Bable.Author')),
                ('requested_agents', models.ManyToManyField(default=None, to='Bable.Requested_Agent')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_story_itself', models.TextField(default='', max_length=4000)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='sto_com', to='Bable.Comment_Source')),
                ('has_voted', models.ManyToManyField(default=None, related_name='sto_has_voted', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_translation_before', models.TextField(default='', max_length=1000)),
                ('the_translation_after', models.TextField(default='', max_length=1000)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='tra_com', to='Bable.Comment_Source')),
                ('has_voted', models.ManyToManyField(default=None, related_name='tra_has_voted', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Votes_Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votes', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_word_itself', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('pronunciation_count', models.IntegerField(default=0)),
                ('attribute_count', models.IntegerField(default=0)),
                ('similarity', models.IntegerField(default=0)),
                ('translation_count', models.IntegerField(default=0)),
                ('example_count', models.IntegerField(default=0)),
                ('story_count', models.IntegerField(default=0)),
                ('relation_count', models.IntegerField(default=0)),
                ('sponsor_count', models.IntegerField(default=0)),
                ('price_limit', models.IntegerField(default=0)),
                ('viewcount', models.IntegerField(default=0)),
                ('space_count', models.IntegerField(default=0)),
                ('vote_count', models.IntegerField(default=0)),
                ('ap_voter_count', models.IntegerField(default=0)),
                ('fontstyle', models.URLField(blank=True, default='', max_length=2000)),
                ('fontsize', models.CharField(blank=True, default='', max_length=3)),
                ('fontype', models.TextField(default='', max_length=14400)),
                ('word_source', models.CharField(default='', max_length=400)),
                ('ap_voters', models.ManyToManyField(default=None, related_name='ap_voters', to='Bable.Author')),
                ('attributes', models.ManyToManyField(default=None, to='Bable.Attribute')),
                ('author', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='word_author', to='Bable.author')),
                ('examples', models.ManyToManyField(default=None, to='Bable.Example')),
                ('home_dictionary', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='Bable.dictionary_source')),
                ('pronunciations', models.ManyToManyField(default=None, to='Bable.IPA_pronunciation')),
                ('relations', models.ManyToManyField(default=None, to='Bable.Relation')),
                ('similarities', models.ManyToManyField(default=None, to='Bable.Simulacrum')),
                ('spaces', models.ManyToManyField(default=None, to='Bable.SpaceSource')),
                ('sponsors', models.ManyToManyField(default=None, to='Bable.Sponsor')),
                ('stories', models.ManyToManyField(default=None, to='Bable.Story')),
                ('translations', models.ManyToManyField(default=None, to='Bable.Translation')),
                ('votes', models.ManyToManyField(default=None, to='Bable.Votes_Source')),
            ],
            options={
                'unique_together': {('home_dictionary', 'the_word_itself')},
            },
        ),
        migrations.CreateModel(
            name='Wordgroup_Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grouping', models.CharField(max_length=200)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('words', models.ManyToManyField(default=None, to='Bable.Word')),
            ],
        ),
        migrations.CreateModel(
            name='Wordgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grouping', models.CharField(max_length=200)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('words', models.ManyToManyField(default=None, to='Bable.Wordgroup_Source')),
            ],
        ),
        migrations.CreateModel(
            name='Word_Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_word_itself', models.CharField(default='', max_length=200)),
                ('home_dictionary', models.CharField(default='', max_length=200)),
                ('word_id', models.CharField(default='', max_length=256)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
            ],
        ),
        migrations.AddField(
            model_name='votes_source',
            name='the_vote_name',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='votename', to='Bable.word_source'),
        ),
        migrations.AddField(
            model_name='votes_source',
            name='the_vote_style',
            field=models.ManyToManyField(default=None, related_name='votestyle', to='Bable.Word_Source'),
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_vote_name', models.CharField(default='', max_length=200, unique=True)),
                ('url2', models.URLField(blank=True, default='', max_length=2000)),
                ('votes', models.IntegerField(default=0)),
                ('voters_count', models.IntegerField(default=0)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('the_vote_style', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='votename', to='Bable.spacesource')),
                ('voters', models.ManyToManyField(default=None, related_name='votestyle_voters', to='Bable.Author')),
            ],
        ),
        migrations.CreateModel(
            name='True_Translation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('vote_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('the_translation_after', models.ManyToManyField(default=None, related_name='translation_to_words', to='Bable.Word')),
                ('the_translation_before', models.ManyToManyField(default=None, related_name='translation_from_words', to='Bable.Word')),
                ('votes', models.ManyToManyField(default=None, to='Bable.Votes')),
            ],
        ),
        migrations.AddField(
            model_name='translation',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_task_itself', models.TextField(default='', max_length=200)),
                ('priority', models.IntegerField(default=0)),
                ('the_owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
            ],
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_synonym_itself', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='syn_com', to='Bable.Comment_Source')),
                ('has_voted', models.ManyToManyField(default=None, related_name='syn_has_voted', to='Bable.Author')),
                ('votes', models.ManyToManyField(default=None, to='Bable.Votes_Source')),
            ],
        ),
        migrations.AddField(
            model_name='story',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.AddField(
            model_name='sponsor',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.AddField(
            model_name='spacesource',
            name='the_space_itself',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.word_source'),
        ),
        migrations.AddField(
            model_name='spacesource',
            name='votessource',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.CreateModel(
            name='Space',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('sidebar', models.TextField(default='', max_length=1000)),
                ('viewcount', models.IntegerField(default=0)),
                ('posts_viewcount', models.IntegerField(default=0)),
                ('postcount', models.IntegerField(default=0)),
                ('votes_count', models.IntegerField(default=0)),
                ('sponsor_count', models.IntegerField(default=0)),
                ('approved_voter_count', models.IntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
                ('for_sale', models.BooleanField(default=False)),
                ('free_sponsorships', models.BooleanField(default=False)),
                ('anyone_can_edit', models.BooleanField(default=False)),
                ('elected_sponsorships', models.BooleanField(default=False)),
                ('entry_fee', models.IntegerField(default=1)),
                ('continuation_fee', models.IntegerField(default=1)),
                ('invite_only', models.BooleanField(default=False)),
                ('invite_active', models.BooleanField(default=False)),
                ('invite_code', models.CharField(default='', max_length=200)),
                ('approved_voters', models.ManyToManyField(default=None, related_name='approved_voters', to='Bable.Author')),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='author', to='Bable.author')),
                ('posts', models.ManyToManyField(default=None, to='Bable.Post')),
                ('sponsors', models.ManyToManyField(default=None, to='Bable.Sponsor')),
                ('the_space_itself', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='Bable.word')),
                ('votes', models.ManyToManyField(default=None, to='Bable.Votes')),
            ],
            options={
                'unique_together': {('author', 'the_space_itself')},
            },
        ),
        migrations.AddField(
            model_name='simulacrum',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('vote_count', models.IntegerField(default=0)),
                ('the_owner', models.CharField(default='', max_length=200)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('renditions', models.ManyToManyField(default=None, to='Bable.Rendition')),
                ('the_sentence_itself', models.ManyToManyField(default=None, to='Bable.Word')),
                ('votes', models.ManyToManyField(default=None, to='Bable.Votes')),
            ],
        ),
        migrations.AddField(
            model_name='rendition',
            name='the_rendition_itself',
            field=models.ManyToManyField(default=None, to='Bable.Word'),
        ),
        migrations.AddField(
            model_name='rendition',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes'),
        ),
        migrations.AddField(
            model_name='relation',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.CreateModel(
            name='Purchase_Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_paid', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('anon_user_id', models.CharField(default='', max_length=256)),
                ('url2purchase', models.URLField(blank=True, default='', max_length=2000)),
                ('description2purchase', models.TextField(default='', max_length=144000)),
                ('description2helpsell', models.TextField(default='', max_length=144000)),
                ('img', models.URLField(blank=True, default='', max_length=2000)),
                ('stripe_price_id', models.CharField(default='', max_length=100)),
                ('stripe_product_id', models.CharField(default='', max_length=100)),
                ('price', models.IntegerField(default=0)),
                ('monthly', models.BooleanField(default=False)),
                ('sum_comments', models.IntegerField(default=0)),
                ('sum_invoices', models.IntegerField(default=0)),
                ('comments', models.ManyToManyField(default=None, to='Bable.Comment')),
                ('invoices', models.ManyToManyField(default=None, to='Bable.Invoice')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='products',
            field=models.ManyToManyField(default=None, to='Bable.Price'),
        ),
        migrations.AddField(
            model_name='post',
            name='spaces',
            field=models.ManyToManyField(default=None, to='Bable.SpaceSource'),
        ),
        migrations.AddField(
            model_name='post',
            name='sponsors',
            field=models.ManyToManyField(default=None, to='Bable.Sponsor'),
        ),
        migrations.AddField(
            model_name='post',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes'),
        ),
        migrations.AddField(
            model_name='post',
            name='words',
            field=models.ManyToManyField(default=None, to='Bable.Word'),
        ),
        migrations.CreateModel(
            name='Page_Density',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(default='', max_length=15)),
                ('time_spent', models.IntegerField(default=0)),
                ('scroll_height', models.IntegerField(default=0)),
                ('scroll_type', models.CharField(choices=[('-viewcount', 'Viral'), ('viewcount', 'Early'), ('-latest_change_date', 'Freshest'), ('latest_change_date', 'Eldest'), ('-sum_has_viewed', 'Uniques'), ('-sum_has_voted', 'Voters'), ('-sum_dictionaries', 'Broadness'), ('-sum_words', 'Intricacy'), ('-sum_comments', 'Talkative'), ('sum_comments', 'Silencio'), ('-under_talked', 'Under Commented'), ('under_talked', 'Over Commented'), ('-sum_spaces', 'Homes'), ('-sum_sponsors', 'Encouraged'), ('-votes_count', 'Votes'), ('votes_count', 'Unvoted'), ('-shuffle', 'Shuffle'), ('shuffle', 'Counter-Shuffle'), ('-attention', 'Attention Span Up'), ('attention', 'Scroll Past')], default='latest_change_date', max_length=180)),
                ('client_height', models.IntegerField(default=0)),
                ('duration', models.IntegerField(default=2)),
                ('density', models.ManyToManyField(default=None, to='Bable.Densitivity')),
                ('post_ids', models.ManyToManyField(default=None, to='Bable.Post_id')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encrypted_message', models.TextField(default='', max_length=10000)),
                ('key_fingerprint', models.CharField(default='', max_length=1000)),
                ('receiver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='author_receiver', to='Bable.author')),
                ('sender', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='author_sender', to='Bable.author')),
            ],
        ),
        migrations.AddField(
            model_name='ipa_pronunciation',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.CreateModel(
            name='Homonym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_homonym_itself', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='hom_com', to='Bable.Comment_Source')),
                ('has_voted', models.ManyToManyField(default=None, related_name='hom_has_voted', to='Bable.Author')),
                ('votes', models.ManyToManyField(default=None, to='Bable.Votes_Source')),
            ],
        ),
        migrations.AddField(
            model_name='example',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.AddField(
            model_name='example',
            name='words',
            field=models.ManyToManyField(default=None, to='Bable.Word_Source'),
        ),
        migrations.AddField(
            model_name='edit',
            name='post_source',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='Bable.postsource'),
        ),
        migrations.AddField(
            model_name='dictionary_source',
            name='words',
            field=models.ManyToManyField(default=None, to='Bable.Word_Source'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='prerequisite_dics',
            field=models.ManyToManyField(default=None, to='Bable.Dictionary_Source'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='purchase_orders',
            field=models.ManyToManyField(default=None, related_name='purchase_orders', to='Bable.Purchase_Order'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='renditions',
            field=models.ManyToManyField(default=None, to='Bable.Rendition'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='revoked_authors',
            field=models.ManyToManyField(default=None, related_name='dic_unallowed', to='Bable.Author'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='sentences',
            field=models.ManyToManyField(default=None, to='Bable.Sentence'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='true_translations',
            field=models.ManyToManyField(default=None, to='Bable.True_Translation'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='wordgroups',
            field=models.ManyToManyField(default=None, to='Bable.Wordgroup'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='words',
            field=models.ManyToManyField(default=None, to='Bable.Word'),
        ),
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('the_definition_itself', models.TextField(default='', max_length=1000)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('votes_count', models.IntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author')),
                ('comment_sources', models.ManyToManyField(default=None, related_name='def_com', to='Bable.Comment_Source')),
                ('has_voted', models.ManyToManyField(default=None, related_name='def_has_voted', to='Bable.Author')),
                ('sponsors', models.ManyToManyField(default=None, to='Bable.Sponsor')),
                ('votes', models.ManyToManyField(default=None, to='Bable.Votes_Source')),
            ],
        ),
        migrations.AddField(
            model_name='connexion',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.AddField(
            model_name='comment_source',
            name='dictionaries',
            field=models.ManyToManyField(default=None, to='Bable.Dictionary_Source'),
        ),
        migrations.AddField(
            model_name='comment_source',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='Bable.comment_source'),
        ),
        migrations.AddField(
            model_name='comment_source',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.AddField(
            model_name='comment_source',
            name='words',
            field=models.ManyToManyField(default=None, to='Bable.Word_Source'),
        ),
        migrations.AddField(
            model_name='comment',
            name='dictionaries',
            field=models.ManyToManyField(default=None, to='Bable.Dictionary'),
        ),
        migrations.AddField(
            model_name='comment',
            name='has_commented',
            field=models.ManyToManyField(default=None, related_name='comments_has_commented', to='Bable.Author'),
        ),
        migrations.AddField(
            model_name='comment',
            name='has_viewed',
            field=models.ManyToManyField(default=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author'), related_name='comments_has_viewed', to='Bable.Author'),
        ),
        migrations.AddField(
            model_name='comment',
            name='has_voted',
            field=models.ManyToManyField(default=None, related_name='comment_has_voted', to='Bable.Author'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='Bable.comment'),
        ),
        migrations.AddField(
            model_name='comment',
            name='sponsors',
            field=models.ManyToManyField(default=None, to='Bable.Sponsor'),
        ),
        migrations.AddField(
            model_name='comment',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes'),
        ),
        migrations.AddField(
            model_name='comment',
            name='words',
            field=models.ManyToManyField(default=None, to='Bable.Word'),
        ),
        migrations.AddField(
            model_name='author',
            name='earnt_invoices',
            field=models.ManyToManyField(default=None, related_name='earntinvoices', to='Bable.Invoice'),
        ),
        migrations.AddField(
            model_name='author',
            name='spent_invoices',
            field=models.ManyToManyField(default=None, related_name='spentinvoices', to='Bable.Invoice'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='author',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='Bable.author'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='definitions',
            field=models.ManyToManyField(default=None, to='Bable.Definition'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='homonyms',
            field=models.ManyToManyField(default=None, to='Bable.Homonym'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='synonyms',
            field=models.ManyToManyField(default=None, to='Bable.Synonym'),
        ),
        migrations.AddField(
            model_name='antonym',
            name='author',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author'),
        ),
        migrations.AddField(
            model_name='antonym',
            name='comment_sources',
            field=models.ManyToManyField(default=None, related_name='ant_com', to='Bable.Comment_Source'),
        ),
        migrations.AddField(
            model_name='antonym',
            name='has_voted',
            field=models.ManyToManyField(default=None, related_name='ant_has_voted', to='Bable.Author'),
        ),
        migrations.AddField(
            model_name='antonym',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes_Source'),
        ),
        migrations.CreateModel(
            name='Anon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_private_key', models.CharField(default='', max_length=600, null=True)),
                ('stripe_webhook_secret', models.CharField(default='', max_length=600, null=True)),
                ('stripe_api_secret', models.CharField(default='', max_length=600, null=True)),
                ('email', models.EmailField(default='', max_length=144, null=True)),
                ('anon_sort', models.IntegerField(choices=[(0, 'dictionaries'), (1, 'saved_dictionaries'), (2, 'examples'), (3, 'tasks'), (4, 'latest'), (5, 'posted_comments'), (6, 'saved_comments'), (7, 'posts'), (8, 'spaces'), (9, 'saved_spaces')], default=0)),
                ('anon_sort_char', models.CharField(choices=[('-sum_dictionaries', 'Most Dictionaries'), ('sum_dictionaries', 'Least Dictionaries'), ('-sum_purchased_dictionaries', 'Most Purchased Dictionaries'), ('sum_purchased_dictionaries', 'Least Purchased Dictionaries'), ('-sum_excluded_authors', 'Most Authors Blocked'), ('sum_excluded_authors', 'Least Authors Blocked'), ('-sum_examples', 'Most Examples'), ('sum_examlpes', 'Least Examples'), ('-sum_tasks', 'Most Tasks'), ('sum_tasks', 'Least Tasks'), ('-sum_posts', 'Most Posts'), ('sum_posts', 'Least Posts'), ('-sum_posted_comments', 'Most Posted Comments'), ('sum_posted_comments', 'Least Posted Comments'), ('-sum_saved_comments', 'Most Saved Comments'), ('sum_saved_comments', 'Least Saved Comments'), ('-sum_purchased_spaces', 'Most Purchased Spaces'), ('sum_purchased_spaces', 'Least Purchased Spaces'), ('-sum_created_votestyles', 'Most Created Votestyles'), ('sum_created_votestyles', 'Least Created Votestyles'), ('-latest_change_date', 'Most Recent Update'), ('latest_change_date', 'Least Recent Update'), ('-creation_date', 'Newest Account Creation'), ('creation_date', 'Oldest Account Creation')], default='latest_change_date', max_length=180)),
                ('sum_dictionaries', models.IntegerField(default=0)),
                ('sum_purchased_dictionaries', models.IntegerField(default=0)),
                ('sum_excluded_authors', models.IntegerField(default=0)),
                ('dictionary_sort', models.IntegerField(choices=[(0, 'freshest'), (1, 'stalest'), (2, 'common'), (3, 'prized'), (4, 'oldest'), (5, 'newest'), (6, 'dispersed'), (7, 'origin'), (8, 'words'), (9, 'votes'), (10, 'translations'), (11, 'sentences'), (12, 'renditions'), (13, 'analyses'), (14, 'viewcount')], default=0)),
                ('dictionary_sort_char', models.CharField(choices=[('-latest_change_date', 'Most Recent Change'), ('latest_change_date', 'Least Recent Change'), ('-views', 'Most Viewed'), ('views', 'Least Viewed'), ('-price', 'Most Expensive'), ('price', 'Least Expensive'), ('-creation_date', 'Oldest'), ('creation_date', 'Newest'), ('-traded_date', 'Most Recent Trade'), ('traded_date', 'Least Recent Trade'), ('-word_count', 'Most Words'), ('word_count', 'Least Words'), ('-votes_count', 'Most Votes'), ('votes_count', 'Least Votes'), ('-rendition_count', 'Most Renditions'), ('rendition_count', 'Least Renditions'), ('-analysis_count', 'Most Analyses'), ('analysis_count', 'Least Analyses')], default='views', max_length=180)),
                ('word_sort', models.IntegerField(choices=[(0, 'alphabetical'), (1, 'latest'), (2, 'definitions'), (3, 'pronunciations'), (4, 'attributes'), (5, 'similarities'), (6, 'translations'), (7, 'examples'), (8, 'relations'), (9, 'sponsor'), (10, 'viewcount'), (11, '-viewcount'), (12, 'price'), (13, '-price'), (14, 'spaces'), (15, 'stories'), (16, 'votes'), (17, '-votes')], default=0)),
                ('word_sort_char', models.CharField(choices=[('the_word_itself', 'Alphabetical'), ('-the_word_itself', 'Anti Alphabetical'), ('-latest_change_date', 'Most Recent Change'), ('latest_change_date', 'Least Recent Change'), ('-creation_date', 'Most Recently Created'), ('creation_date', 'Least Recently Created'), ('-pronunciation_count', 'Most Pronunciations'), ('pronunciation_count', 'Least Pronunciations'), ('-attribute_count', 'Most Attributes'), ('attribute_count', 'Least Attributes'), ('-similarity_count', 'Most Similarities'), ('similarity_count', 'Least Similarities'), ('-translation_count', 'Most Translations'), ('translation_count', 'Least Translations'), ('-example_count', 'Most Examples'), ('example_count', 'Least Examples'), ('-relation_count', 'Most Relations'), ('relation_count', 'Least Relations'), ('-sponsor_count', 'Most Sponsors'), ('sponsor_count', 'Least Sponsors'), ('-viewcount', 'Most Viewed'), ('viewcount', 'Least Viewed'), ('-price_limit', 'Most Expensive'), ('price_limit', 'Least Expensive'), ('-space_count', 'Most Spaces'), ('space_count', 'Least Spaces'), ('-story_count', 'Most Stories'), ('story_count', 'Least Stories'), ('-vote_count', 'Most Votes'), ('vote_count', 'Least Votes')], default='viewcount', max_length=180)),
                ('attribute_sort', models.IntegerField(choices=[(0, 'latest'), (1, 'definitions'), (2, 'votes'), (3, '-votes'), (4, 'views'), (5, '-views')], default=0)),
                ('attribute_sort_char', models.CharField(choices=[(0, 'latest'), (1, 'definitions'), (2, 'votes'), (3, '-votes'), (4, 'views'), (5, '-views')], default='the_attribute_itself', max_length=180)),
                ('sum_examples', models.IntegerField(default=0)),
                ('example_sort', models.IntegerField(choices=[(0, 'freshest'), (1, 'oldest'), (2, 'precision'), (3, 'votes'), (4, 'unseen'), (5, 'views')], default=0)),
                ('sponsor_sort', models.IntegerField(choices=[(0, 'alphabetical'), (1, '-alphabetical'), (2, 'latest'), (3, 'oldest'), (4, 'lowtohigh'), (5, 'hightolow'), (6, 'low allowable'), (7, 'high allowable'), (8, 'votes'), (9, '-votes'), (10, 'views'), (11, '-views')], default=0)),
                ('sum_tasks', models.IntegerField(default=0)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('sum_posted_comments', models.IntegerField(default=0)),
                ('sum_saved_comments', models.IntegerField(default=0)),
                ('comment_sort', models.IntegerField(choices=[(0, 'dictionaries'), (1, '-dictionaries'), (2, 'words'), (3, '-words'), (4, 'sponsors'), (5, '-sponsors'), (6, 'uniques'), (7, '-uniques'), (8, 'viewcount'), (9, 'unseen'), (10, 'latest'), (11, 'definition'), (12, 'discussed'), (13, 'final'), (14, 'voters')], default=0)),
                ('comment_sort_char', models.CharField(choices=[('sum_dctionaries', 'Generalist'), ('-sum_dictionaries', 'Broadness'), ('sum_words', 'Less Complex'), ('-sum_words', 'More Intelligent'), ('sum_sponsors', 'Encouraged'), ('-sum_sponsors', 'Discouraged'), ('votes_uniques', 'Less Uniques'), ('-votes_uniques', 'More Uniques'), ('-viewcount', 'Viewcount'), ('viewcount', 'Unseen'), ('-latest_change_date', 'Latest'), ('latest_change_date', 'Unchanged'), ('-sum_has_commented', 'Discussed'), ('sum_has_commented', 'Unspoken')], default='latest_change_date', max_length=180)),
                ('sum_posts', models.IntegerField(default=0)),
                ('post_sort', models.IntegerField(choices=[(0, 'viral'), (1, 'early'), (2, 'freshest'), (3, 'eldest'), (11, 'votes'), (12, 'unvoted')], default=0)),
                ('post_sort_char', models.CharField(choices=[('-viewcount', 'Viral'), ('viewcount', 'Early'), ('-latest_change_date', 'Freshest'), ('latest_change_date', 'Eldest'), ('-sum_has_viewed', 'Uniques'), ('-sum_has_voted', 'Voters'), ('-sum_dictionaries', 'Broadness'), ('-sum_words', 'Intricacy'), ('-sum_comments', 'Talkative'), ('sum_comments', 'Silencio'), ('-under_talked', 'Under Commented'), ('under_talked', 'Over Commented'), ('-sum_spaces', 'Homes'), ('-sum_sponsors', 'Encouraged'), ('-votes_count', 'Votes'), ('votes_count', 'Unvoted'), ('-shuffle', 'Shuffle'), ('shuffle', 'Counter-Shuffle'), ('-attention', 'Attention Span Up'), ('attention', 'Scroll Past')], default='latest_change_date', max_length=180)),
                ('sum_spaces', models.IntegerField(default=0)),
                ('sum_purchased_spaces', models.IntegerField(default=0)),
                ('space_sort', models.IntegerField(choices=[(0, 'viral'), (1, 'early'), (2, 'freshest'), (3, 'eldest'), (4, 'starter'), (5, 'useful'), (6, 'encourage'), (7, 'synched')], default=0)),
                ('space_sort_char', models.CharField(choices=[('-viewcount', 'Most Viewed'), ('viewcount', 'Least Viewed'), ('-latest_change_date', 'Recent Change'), ('latest_change_date', 'Distant Change'), ('-posts_viewcount', 'Most Post Views'), ('posts_viewcount', 'Least Post Views'), ('-votes_count', 'Most Votes'), ('votes_count', 'Least Votes'), ('-sponsor_count', 'Most Sponsored'), ('sponsor_count', 'Least Sponsored'), ('-approved_voter_count', 'Most Approved Voters'), ('approved_voter_count', 'Least Approved Voters')], default='latest_change_date', max_length=180)),
                ('sum_created_votestyles', models.IntegerField(default=0)),
                ('sum_past_votes', models.IntegerField(default=0)),
                ('monero_wallet', models.CharField(default='', max_length=200)),
                ('false_wallet', models.IntegerField(default=0)),
                ('is_viewing', models.BooleanField(default=False)),
                ('all_files', models.ManyToManyField(default=None, related_name='all_files', to='Bable.File')),
                ('applied_dictionaries', models.ManyToManyField(default=None, related_name='applied_dictionaries', to='Bable.Dictionary')),
                ('applied_votestyles', models.ManyToManyField(default=None, related_name='applied_votestyles', to='Bable.Votes')),
                ('created_votestyles', models.ManyToManyField(default=None, related_name='created_votestyles', to='Bable.Votes')),
                ('dictionaries', models.ManyToManyField(default=None, related_name='dictionaries', to='Bable.Dictionary')),
                ('examples', models.ManyToManyField(blank=True, default=None, to='Bable.Example')),
                ('excluded_dic_authors', models.ManyToManyField(default=None, to='Bable.Author')),
                ('excluded_votestyles', models.ManyToManyField(default=None, related_name='excluded_votestyles', to='Bable.Votes')),
                ('home_page_density', models.ManyToManyField(default=None, to='Bable.Page_Density')),
                ('notifications', models.ManyToManyField(default=None, to='Bable.Notification')),
                ('past_votes', models.ManyToManyField(default=None, related_name='past_votes', to='Bable.Votes')),
                ('posted_comments', models.ManyToManyField(default=None, related_name='posted_comments', to='Bable.Comment')),
                ('posts', models.ManyToManyField(blank=True, default=None, to='Bable.Post')),
                ('products', models.ManyToManyField(default=None, related_name='anon_product', to='Bable.Price')),
                ('public_files', models.ManyToManyField(default=None, related_name='public_files', to='Bable.File')),
                ('purchased_dictionaries', models.ManyToManyField(default=None, related_name='purchased_dictionaries', to='Bable.Dictionary')),
                ('purchased_spaces', models.ManyToManyField(blank=True, default=None, related_name='purchased_spaces', to='Bable.Space')),
                ('purchases', models.ManyToManyField(default=None, related_name='anon_purchase', to='Bable.Price')),
                ('received_messages', models.ManyToManyField(default=None, related_name='received_messages', to='Bable.Comment_Source')),
                ('reposting_comment_sources', models.ManyToManyField(default=None, related_name='reposting_comment_sources', to='Bable.Comment_Source')),
                ('reposting_comments', models.ManyToManyField(default=None, related_name='reposting_comments', to='Bable.Comment')),
                ('saved_comments', models.ManyToManyField(default=None, related_name='saved_comments', to='Bable.Comment')),
                ('saved_spaces', models.ManyToManyField(blank=True, default=None, related_name='saved_spaces', to='Bable.Space')),
                ('saved_votestyles', models.ManyToManyField(default=None, related_name='saved_votestyles', to='Bable.Votes')),
                ('sent_messages', models.ManyToManyField(default=None, related_name='sent_messages', to='Bable.Comment_Source')),
                ('spaces', models.ManyToManyField(blank=True, default=None, related_name='spaces', to='Bable.Space')),
                ('tasks', models.ManyToManyField(default=None, to='Bable.Task')),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='analysis',
            name='author',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Bable.author'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='the_critique_itself',
            field=models.ManyToManyField(default=None, to='Bable.Word'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='votes',
            field=models.ManyToManyField(default=None, to='Bable.Votes'),
        ),
        migrations.CreateModel(
            name='Advertising',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='', max_length=144, null=True)),
                ('allowable_expenditure', models.IntegerField(default=0)),
                ('price_limit', models.IntegerField(default=0)),
                ('words_to_sponsor', models.CharField(default='', max_length=2000)),
                ('the_sponsorship_phrase', models.CharField(default='', max_length=200)),
                ('latest_change_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('img', models.URLField(max_length=2000)),
                ('url2', models.URLField(max_length=2000)),
                ('clicks', models.IntegerField(default=0)),
                ('payperview', models.BooleanField(default=False)),
                ('trickles', models.IntegerField(default=0)),
                ('name', models.CharField(default='', max_length=2000)),
                ('views', models.IntegerField(default=0)),
                ('requested_agents', models.ManyToManyField(default=None, to='Bable.Requested_Agent')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='dictionary',
            unique_together={('author', 'the_dictionary_itself')},
        ),
    ]
